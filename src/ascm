#!/usr/bin/python3

import argparse
import signal
import sys
from AscmExecCmd import *


def quit_program(signal, frame):
    """ Close curses screen and quit program. """
    ui.close_curses_screen()
    sys.exit(0)


if __name__ == "__main__":

    # Obtain command-line arguments.
    parser = argparse.ArgumentParser(
            description = "Offer command menu from menu file")
    parser.add_argument('--ui',
            choices = ["curses", "tray", "window"],
            default = "tray",
            help = "choose user interface (default: 'tray')")
    parser.add_argument('--root',
            choices = ["su", "sudo", "pkexec"],
            help = "method to gain root priviledges")
    parser.add_argument('menu_file',
            nargs = 1,
            help = "menu configuration file (see menu_syntax)")
    args = parser.parse_args()

    # Further process command-line arguments into 'opt'.
    opt = {}
    opt["menu_file"] = args.menu_file[0]
    if "root" == "su":
        opt["root"] = RootMethod.su
    elif "root" == "sudo":
        opt["root"] = RootMethod.sudo
    elif "root" == "pkexec":
        opt["root"] = RootMethod.pkexec

    # Prepare ascm interface to run.
    if args.ui == "curses":
        import signal
        signal.signal(signal.SIGINT, quit_program)
        import AscmUiCurses
        Ui = AscmUiCurses.AscmUiCurses
        if "root" not in opt:
            opt["root"] = RootMethod.sudo
    else:
        import AscmUiGtk
        Ui = AscmUiGtk.AscmUiGtk
        opt["show_window"] = (args.ui == "window")
        if "root" not in opt:
            opt["root"] = RootMethod.pkexec

    # Run ascm interface.
    ui = Ui(opt)
    ui.run()
    ui.finish()
